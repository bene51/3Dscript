/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class renderer3d_OpenCLRaycaster */

#ifndef _Included_renderer3d_OpenCLRaycaster
#define _Included_renderer3d_OpenCLRaycaster
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    initRaycaster8
 * Signature: (IIIIIIFF)V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_initRaycaster8
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    initRaycaster16
 * Signature: (IIIIIIFF)V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_initRaycaster16
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_close
  (JNIEnv *, jclass);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    setTexture8
 * Signature: (I[[B)V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setTexture8
  (JNIEnv *, jclass, jint, jobjectArray);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setBackground
  (JNIEnv *, jclass, jintArray data, jint w, jint h);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_clearBackground
  (JNIEnv *, jclass);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    setTexture16
 * Signature: (I[[S)V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setTexture16
  (JNIEnv *, jclass, jint, jobjectArray);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    setTargetSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setTargetSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     renderer3d_OpenCLRaycaster
 * Method:    cast
 * Signature: (I[FFFFFFFFF)[B
 */
JNIEXPORT jintArray JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_cast
  (JNIEnv *, jclass, jfloatArray, float, float, jobjectArray channelSettings,
		jint bgr, jint bgg, jint bgb);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_white
  (JNIEnv *, jclass, jint);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setKernel(
		JNIEnv *env,
		jclass,
		jstring kernel);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_setColorLUT(
		JNIEnv *env,
		jclass,
		jint channel,
		jintArray lut);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_clearColorLUT(
		JNIEnv *env,
		jclass,
		jint channel);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_calculateGradients(
		JNIEnv *env,
		jclass,
		jint channel,
		jfloat);

JNIEXPORT void JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_clearGradients(
		JNIEnv *env,
		jclass,
		jint channel);

JNIEXPORT jstring JNICALL Java_animation3d_renderer3d_OpenCLRaycaster_getUNCForPath(
		JNIEnv *env,
		jclass,
		jstring localPath);

#ifdef __cplusplus
}
#endif
#endif
